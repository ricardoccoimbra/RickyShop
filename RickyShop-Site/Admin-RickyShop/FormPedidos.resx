<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>