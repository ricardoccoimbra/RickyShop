<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>